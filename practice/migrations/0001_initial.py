# Generated by Django 3.2.21 on 2023-09-16 08:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('backend', '0001_initial'),
        ('education', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='education.level', verbose_name='level')),
            ],
        ),
        migrations.CreateModel(
            name='PracticeProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=1, verbose_name='points')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='practice.practice', verbose_name='practice')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice', to='education.problem', verbose_name='problem')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='submission time')),
                ('time', models.DateTimeField(db_index=True, null=True, verbose_name='completion time')),
                ('points', models.FloatField(db_index=True, default=0.0, null=True, verbose_name='points granted')),
                ('result', models.CharField(blank=True, choices=[('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('PE', 'Pending')], db_index=True, default=None, max_length=3, null=True, verbose_name='result')),
                ('max_points', models.FloatField(db_index=True, default=1.0, null=True, verbose_name='max points')),
                ('contest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='practice.practice', verbose_name='contest')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practice_submissions', to='backend.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'practice submission',
                'verbose_name_plural': 'practice submissions',
                'permissions': (('view_all_practice_submission', 'View all practice submission'), ('view_output_practice_submission', 'View user practice submission output')),
            },
        ),
        migrations.CreateModel(
            name='SubmissionProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.BooleanField(default=False, verbose_name='result')),
                ('points', models.FloatField(null=True, verbose_name='points granted')),
                ('output', models.TextField(blank=True, verbose_name="student's answer")),
                ('problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='practice.practiceproblem', verbose_name='contest problem')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='practice.submission', verbose_name='submission')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practice_problem_submissions', to='education.problem', verbose_name='problem')),
            ],
            options={
                'verbose_name': 'submission problem',
                'verbose_name_plural': 'submission problems',
                'unique_together': {('submission', 'problem')},
            },
        ),
    ]
